# Euclidean distanceimport mathdef DocEuclidianDistance(id_x, id_y, docs, word_count):  dict_keys = dict()  sum_dist = 0  #start_clock_1 = time.clock()  # words in id_x  for id_word, x1 in docs[id_x].items():    if dict_keys.get(id_word) == None:      x2 = docs[id_y].get(id_word) or 0      sum_dist = sum_dist + (x1 - x2) * (x1 - x2)      dict_keys[id_word] = True  # words in id_y  for id_word, x2 in docs[id_y].items():    if dict_keys.get(id_word) == None:      x1 = docs[id_x].get(id_word) or 0      sum_dist = sum_dist + (x1 - x2) * (x1 - x2)      dict_keys[id_word] = True  #end_clock_1 = time.clock()  # 1 for to all words (probably slower)  # test  #sum_dist1 = 0  #start_clock_2 = time.clock()  #for id_w in range(1, word_count + 1):  #  x1 = docs[id_x].get(id_w) or 0  #  x2 = docs[id_y].get(id_w) or 0  #  sum_dist1 = sum_dist1 + (x1 - x2) * (x1 - x2)  #end_clock_2 = time.clock()  #assert(sum_dist == sum_dist1)  # test  return math.sqrt(sum_dist)