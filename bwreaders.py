# Read vocabularyimport numpy as npdef ReadVocabulary(VOCAB_FILE):  word_list = {}  index = 0  with open(VOCAB_FILE,'r+') as file_reader:    for line in file_reader:      word = line.replace('\n','')      # Update List to maintain order      word_list[index] = word      index = index + 1	    file_reader.close()  return word_listdef ReadDocuments(DOCWORD_FILE, max_documents):  doc_reader = open(DOCWORD_FILE, 'r+')  D = int(doc_reader.readline().replace('\n',''))  W = int(doc_reader.readline().replace('\n',''))  NNZ = int(doc_reader.readline().replace('\n',''))    documents = dict()    for x in range(max_documents):    documents[x] = dict()    for x in range(NNZ):    wordList = doc_reader.readline().replace('\n', '').split()	# Convert to starts with 0    doc_id = int(wordList[0]) - 1    #print(wordList)    if doc_id >= max_documents:      break      # Convert to starts with 0    word_id = int(wordList[1]) - 1    count = int(wordList[2])      documents[doc_id][word_id] = count      doc_reader.close()      return documents, D, W, NNZ,   # print a bag of words docdef print_bag_doc(document, vocab):  for name, count in document.items():    print('{0:25} --> {1:10d}'.format(vocab[name], count))#print_bag_doc(documents[1], word_listdef read_document_corpus(filepath, num_docs, num_words_in_vocabulary):  docs_bag_of_words = np.zeros(shape=(num_docs,num_words_in_vocabulary), dtype=int)  with open(filepath, "r") as file:      for line in file:          doc_id, word_id, count = line.split()          try:              doc_id = int(doc_id)              word_id = int(word_id)              count = int(count)          except ValueError:              print("ValueError: values of doc_id, word_id or count couldn't be converted to"                    " integer.")          docs_bag_of_words[doc_id - 1,word_id - 1] = count  return docs_bag_of_words