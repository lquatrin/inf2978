# Generate random numberimport randomimport mathimport timeimport numpy as npdef RandomGenGaussianValue(x, mean, st_dev):  return np.random.normal(0, st_dev, 1)[0]  #x = (x - 0.5) * 2.0  #sign = 1.0  #if x < 0.0:  #  sign = -1.0  #x = abs(x)    #expo =  ((x - mean) / st_dev)**2  #f_den = (st_dev*math.sqrt(2.0 * math.pi))  #ret_val = (1.0/f_den) * math.exp(-(1.0/2.0) * expo)    #return sign * ret_valdef RandomGenAchiloptasValue(x):  #elif x <= 1:  ret_val = 1.0    if x < 1.0/6.0:    ret_val = -1.0  elif x < 5.0/6.0:    ret_val = 0.0    return ret_valdef GenerateRandomGaussianMatrix(n, d):  s_clock = time.clock()    W = np.zeros(shape = (n,d))  s_dev = math.sqrt(1.0/float(n))    for i in range(n):    for j in range(d):      W[i][j] = RandomGenGaussianValue(random.random(), 0.0, s_dev)        f_clock = time.clock()    return W, (f_clock - s_clock)def GenerateRandomAchiloptasMatrix(n, d):  s_clock = time.clock()  W = np.zeros(shape = (n,d))  for i in range(n):    for j in range(d):      W[i][j] = RandomGenAchiloptasValue(random.random())  f_clock = time.clock()  return W, (f_clock - s_clock)  